import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.util.List;

public class ManagerPanel {
    private JFrame frame;
    private AccessControlSystem system;
    private JTable cardTable;
    private DefaultTableModel tableModel;
    private AccessCard card; // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏ö‡∏±‡∏ï‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á Manager Panel

    public ManagerPanel(AccessControlSystem system, AccessCard card) {
        // ‡∏Ç‡∏≠‡∏Å‡∏£‡∏≠‡∏Å PIN ‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
        String inputPin = JOptionPane.showInputDialog(null, "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™ PIN:");

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á "ManagerPanel"
        boolean isManager = card.getAccessLevels().stream()
                .anyMatch(level -> level.equalsIgnoreCase("Manager"));

        if (!isManager || !card.validatePIN(inputPin)) {
            JOptionPane.showMessageDialog(null, "‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á Manager Panel!", "Access Denied", JOptionPane.ERROR_MESSAGE);
            return;
        }


        this.system = system;
        frame = new JFrame("Manager Panel");
        frame.setSize(600, 500);
        frame.setLayout(new BorderLayout());

        showManagerOptions();
        frame.setVisible(true);
    }

    // üîπ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ï‡∏£
    private void updateCardList() {
        tableModel.setRowCount(0); // ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡∏Å‡πà‡∏≠‡∏ô
        for (AccessCard card : system.getAllCards()) {
            tableModel.addRow(new Object[]{
                    card.getCardID(),
                    card.getAccessLevels().toString(),
                    card.getAccessLevelCategory()
            });
        }
    }

    // üîπ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏´‡πâ‡∏ö‡∏±‡∏ï‡∏£
    private void addAccessLevel() {
        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));

        JTextField cardIDField = new JTextField();
        panel.add(new JLabel("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å Card ID:"));
        panel.add(cardIDField);

        String[] levels = {"High floor", "Medium floor", "Low floor"};
        JComboBox<String> levelComboBox = new JComboBox<>(levels);
        panel.add(new JLabel("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå:"));
        panel.add(levelComboBox);

        JTextField roomField = new JTextField();
        panel.add(new JLabel("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å Room:"));
        panel.add(roomField);

        int result = JOptionPane.showConfirmDialog(frame, panel, "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå", JOptionPane.OK_CANCEL_OPTION);

        if (result == JOptionPane.OK_OPTION) {
            System.out.println("[DEBUG] ‡∏Å‡∏î OK ‡πÅ‡∏•‡πâ‡∏ß!"); // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏à‡∏£‡∏¥‡∏á‡πÑ‡∏´‡∏°

            String cardID = cardIDField.getText().trim();
            String level = (String) levelComboBox.getSelectedItem();
            String room = roomField.getText().trim();

            if (cardID.isEmpty() || room.isEmpty()) {
                JOptionPane.showMessageDialog(frame, "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô", "Error", JOptionPane.ERROR_MESSAGE);
                System.out.println("[ERROR] ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö!");
                return;
            }

            String inputPin = JOptionPane.showInputDialog(frame, "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™ PIN:");
            if (inputPin == null || inputPin.trim().isEmpty()) {
                System.out.println("[ERROR] ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™ PIN!");
                return;
            }

            System.out.println("[DEBUG] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ modifyCard() -> CardID: " + cardID + ", Level: " + level);

            if (system.modifyCard(cardID, "ADD", level)) {
                System.out.println("[SUCCESS] ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
                JOptionPane.showMessageDialog(frame, "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
                updateCardList();
            } else {
                System.out.println("[ERROR] ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏´‡πâ Card ID: " + cardID);
                JOptionPane.showMessageDialog(frame, "Card ID ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            System.out.println("[CANCEL] ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏î‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å!");
        }
    }


    //‡πÄ‡∏û‡∏¥‡∏Å‡∏ñ‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πå‡∏î‚ùå
    private void revokeAccessLevel() {
        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));

        JTextField cardIDField = new JTextField();
        panel.add(new JLabel("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å Card ID:"));
        panel.add(cardIDField);

        String[] levels = {"High floor", "Medium floor", "Low floor"};
        JComboBox<String> levelComboBox = new JComboBox<>(levels);
        panel.add(new JLabel("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö:"));
        panel.add(levelComboBox);

        JTextField roomField = new JTextField();
        panel.add(new JLabel("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å Room:"));
        panel.add(roomField);

        int result = JOptionPane.showConfirmDialog(frame, panel, "‡∏•‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå", JOptionPane.OK_CANCEL_OPTION);

        if (result == JOptionPane.OK_OPTION) {
            System.out.println("[DEBUG] ‡∏Å‡∏î OK ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå");

            String cardID = cardIDField.getText().trim();
            String level = (String) levelComboBox.getSelectedItem();
            String room = roomField.getText().trim();

            if (cardID.isEmpty() || room.isEmpty()) {
                JOptionPane.showMessageDialog(frame, "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô", "Error", JOptionPane.ERROR_MESSAGE);
                System.out.println("[ERROR] ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö!");
                return;
            }

            String inputPin = JOptionPane.showInputDialog(frame, "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™ PIN:");
            if (inputPin == null || inputPin.trim().isEmpty()) {
                System.out.println("[ERROR] ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™ PIN!");
                return;
            }

            System.out.println("[DEBUG] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ modifyCard() -> CardID: " + cardID + ", ‡∏•‡∏ö Level: " + level);

            if (system.modifyCard(cardID, "REVOKE", level)) {
                System.out.println("[SUCCESS] ‡∏•‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
                JOptionPane.showMessageDialog(frame, "‡∏•‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
                updateCardList();
            } else {
                System.out.println("[ERROR] ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Ç‡∏≠‡∏á Card ID: " + cardID);
                JOptionPane.showMessageDialog(frame, "Card ID ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ô‡∏µ‡πâ!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            System.out.println("[CANCEL] ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏î‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å!");
        }
    }


    private void checkCardInformation() {
        String cardID = JOptionPane.showInputDialog(frame, "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å Card ID:");
        if (cardID == null || cardID.trim().isEmpty()) return;

        String inputPin = JOptionPane.showInputDialog(frame, "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™ PIN:");
        if (inputPin == null || inputPin.trim().isEmpty()) return;

        AccessCard card = system.getCard(cardID);
        if (card != null && card.validatePIN(inputPin)) {
            JOptionPane.showMessageDialog(frame, "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πå‡∏î:\n" + card.toString(), "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πå‡∏î", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(frame, "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™ PIN ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void modifyAccessLevel() {
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á panel ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));  // ‡∏à‡∏±‡∏î‡∏ß‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á

        // Card ID
        JTextField cardIDField = new JTextField();
        cardIDField.setPreferredSize(new Dimension(200, 30));
        panel.add(new JLabel("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å Card ID:"));
        panel.add(cardIDField);

        // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå
        String[] levels = {"‡∏™‡∏π‡∏á", "‡∏Å‡∏•‡∏≤‡∏á", "‡∏ï‡πà‡∏≥"};
        JComboBox<String> levelComboBox = new JComboBox<>(levels);
        panel.add(new JLabel("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:"));
        panel.add(levelComboBox);

        // ‡∏Å‡∏£‡∏≠‡∏Å Room
        JTextField roomField = new JTextField();
        roomField.setPreferredSize(new Dimension(200, 30));
        panel.add(new JLabel("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å Room:"));
        panel.add(roomField);

        // ‡∏õ‡∏∏‡πà‡∏° OK
        JButton okButton = new JButton("OK");
        panel.add(okButton);

        // ‡πÅ‡∏™‡∏î‡∏á dialog ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        int option = JOptionPane.showOptionDialog(frame, panel, "‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå",
                JOptionPane.DEFAULT_OPTION, JOptionPane.PLAIN_MESSAGE, null, new Object[]{}, null);

        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° OK
        okButton.addActionListener(e -> {
            String cardID = cardIDField.getText().trim();
            String level = (String) levelComboBox.getSelectedItem();
            String room = roomField.getText().trim();

            if (cardID.isEmpty() || room.isEmpty()) {
                JOptionPane.showMessageDialog(frame, "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                // ‡∏Ç‡∏≠‡∏£‡∏´‡∏±‡∏™ PIN ‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
                String inputPin = JOptionPane.showInputDialog(frame, "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™ PIN:");
                if (inputPin == null || inputPin.trim().isEmpty()) return;

                // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πå‡∏î
                if (system.modifyCard(cardID, "MODIFY", level)) {
                    JOptionPane.showMessageDialog(frame, "‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
                } else {
                    JOptionPane.showMessageDialog(frame, "Card ID ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        });
    }


    private void showManagerOptions() {
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á panel ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°
        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));  // ‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ô‡∏ß‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏ß‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏≤‡∏°‡∏õ‡∏∏‡πà‡∏°
        JButton addAccessButton = new JButton("‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå");
        JButton revokeAccessButton = new JButton("‡∏•‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå");
        JButton modifyAccessButton = new JButton("‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå");
        JButton checkCardButton = new JButton("‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πå‡∏î");

        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏á‡πÉ‡∏ô panel
        panel.add(addAccessButton);
        panel.add(revokeAccessButton);
        panel.add(modifyAccessButton);
        panel.add(checkCardButton);

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á JScrollPane ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö scroll
        JScrollPane scrollPane = new JScrollPane(panel);
        frame.add(scrollPane, BorderLayout.CENTER);  // ‡πÉ‡∏™‡πà panel ‡∏•‡∏á‡πÉ‡∏ô frame

        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°
        addAccessButton.addActionListener(e -> addAccessLevel());  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå
        revokeAccessButton.addActionListener(e -> revokeAccessLevel());
        modifyAccessButton.addActionListener(e -> modifyAccessLevel());  // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå
        checkCardButton.addActionListener(e -> checkCardInformation());  // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πå‡∏î
    }



}



